Problem Description
Given a stack of integers A, sort it using another stack.

Return the array of integers after sorting the stack using another stack.



Problem Constraints
1 <= |A| <= 5000

0 <= A[i] <= 109



Input Format
The only argument is a stack given as an integer array A.



Output Format
Return the array of integers after sorting the stack using another stack.



Example Input
Input 1:

 A = [5, 4, 3, 2, 1]
Input 2:

 A = [5, 17, 100, 11]


Example Output
Output 1:

 [1, 2, 3, 4, 5]
Output 2:

 [5, 11, 17, 100]


Example Explanation
Explanation 1:

 Just sort the given numbers.
Explanation 2:

 Just sort the given numbers.


//Java


public class Solution {
    public int[] solve(int[] A) {
        Stack<Integer> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        int n = A.length;
        for(int i = 0; i < n; i++){
            if(!st1.isEmpty()){
                while(!st1.isEmpty() && st1.peek() < A[i]){
                    st2.push(st1.pop());
                }
                st1.push(A[i]);
                while(!st2.isEmpty()){
                    st1.push(st2.pop());
                }
            }else{
                st1.push(A[i]);
            }
        }

        for(int i = 0; i < n; i++){
            A[i] = st1.pop();
        }

        return A;
    }
}
