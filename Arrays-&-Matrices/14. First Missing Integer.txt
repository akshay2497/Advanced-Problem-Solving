Problem Description
Given an unsorted integer array, A of size N. Find the first missing positive integer.

Note: Your algorithm should run in O(n) time and use constant space.



Problem Constraints
1 <= N <= 1000000

-109 <= A[i] <= 109



Input Format
First argument is an integer array A.



Output Format
Return an integer denoting the first missing positive integer.



Example Input
Input 1:

[1, 2, 0]
Input 2:

[3, 4, -1, 1]
Input 3:

[-8, -7, -6]


Example Output
Output 1:

3
Output 2:

2
Output 3:

1


Example Explanation
Explanation 1:

A = [1, 2, 0]
First positive integer missing from the array is 3.

//Java

public class Solution {
    public int firstMissingPositive(ArrayList<Integer> A) {
        /*
        Approach :-
        1.  As it is mentioned not to use extra space we must take array indices
            into consideration.
        2.  As we need to find first missing natural number it means array can have at max
            1 - N natural no's present but array can contain -ve and zero values as well
        3.  To tackle -ve and zero values first replace all -ve and zeros with any element
            greater then N.
        4.  Then Traverse over the array and if you find an element less than equal to 
            N then the get the corrosponding index of that element which can be retrieved by
            ele-1. then set the sign of element present at that index to -ve. do this for all
            array ele.
        5.  Then traverse over the array return index+1 whenever you encounter a non -ve value,
            If array exausts then all natural no's are present so return N+1 at the end
        6.  TC = O(N) || SC = O(1) 
        */
        int x = A.size()+2;
        for(int i = 0; i < A.size(); i++){
            if(A.get(i) <= 0){
                A.set(i, x);
            }
        }

        for(int i = 0; i < A.size(); i++){
            int temp = Math.abs(A.get(i));
            if(temp <= A.size()){
                int idx = temp - 1;
                A.set(idx, -1*Math.abs(A.get(idx)));
            }
        }
        for(int i = 0; i < A.size(); i++){
            if(A.get(i) > 0)
                return i+1;
        }
        return A.size()+1;
    }
}
