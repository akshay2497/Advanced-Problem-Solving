Problem Description
Given an integer array A, sort the array using Merge Sort.


Problem Constraints
1 <= |A| <= 105
1 <= A[i] <= 109


Input Format
First argument is an integer array A.


Output Format
Return the sorted array.


Example Input
Input 1:-
A = [1, 4, 10, 2, 1, 5]
Input 2:-
A = [3, 7, 1]


Example Output
Output 1:-
[1, 1, 2, 4, 5, 10]
Output 2:-
[1, 3, 7]


Example Explanation
Explanation 1:
Return the sorted array.

//Java

public class Solution {
    public ArrayList<Integer> solve(ArrayList<Integer> A) {
        mergeSort(A, 0, A.size()-1);
        return A;
    }

    public static void mergeSort(ArrayList<Integer> arr, int left, int right){
        if(left >= right)
            return;
        int mid = (left + right) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid+1, right);
        ArrayList<Integer> temp = new ArrayList<>(right-left+1);
        int i = left, j = mid+1, k = 0;
        while(i <= mid && j <= right){
            if(arr.get(i) < arr.get(j)){
                temp.add(arr.get(i));
                k++;
                i++;
            }else{
                temp.add(arr.get(j));
                k++;
                j++;
            }
        }
        while(i <= mid){
            temp.add(arr.get(i));
            i++;
            k++;
        }
        while(j <= right){
            temp.add(arr.get(j));
            j++;
            k++;
        }

        for(i = 0; i < temp.size(); i++){
            arr.set(left+i, temp.get(i));
        }
    }    
}
