Problem Description
Given two sorted integer arrays A and B, merge B and A as one sorted array and return it as an output.



Problem Constraints
-1010 <= A[i], B[i] <= 1010



Input Format
First Argument is a 1-D array representing A.

Second Argument is also a 1-D array representing B.



Output Format
Return a 1-D vector which you got after merging A and B.



Example Input
Input 1:

A = [4, 7, 9 ]
B = [2, 11, 19 ]
Input 2:

A = [1]
B = [2]


Example Output
Output 1:

[2, 4, 7, 9, 11, 19]
Output 2:

[1, 2]


Example Explanation
Explanation 1:

Merging A and B produces the output as described above.
Explanation 2:

 Merging A and B produces the output as described above.

//Java

public class Solution {
    // DO NOT MODIFY THE LIST. IT IS READ ONLY
    public ArrayList<Integer> solve(final List<Integer> A, final List<Integer> B) {
        return merge(A, B);
    }
    public static ArrayList<Integer> merge(List<Integer> A, List<Integer> B){
        int n = A.size(), m = B.size();
        ArrayList<Integer> temp = new ArrayList<>();
        int i = 0, j = 0, k = 0;
        while(i < n && j < m){
            if(A.get(i) < B.get(j)){
                temp.add(A.get(i));
                k++;
                i++;
            }else{
                temp.add(B.get(j));
                k++;
                j++;
            }
        }
        while(i < n){
            temp.add(A.get(i));
            i++;
            k++;
        }
        while(j < m){
            temp.add(B.get(j));
            j++;
            k++;
        }
        return temp;
    }
}
