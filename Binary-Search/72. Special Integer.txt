Problem Description
Given an array of integers A and an integer B, find and return the maximum value K such that there is no subarray in A of size K with the sum of elements greater than B.



Problem Constraints
1 <= |A| <= 100000
1 <= A[i] <= 10^9

1 <= B <= 10^9



Input Format
The first argument given is the integer array A.

The second argument given is integer B.



Output Format
Return the maximum value of K (sub array length).



Example Input
Input 1:

A = [1, 2, 3, 4, 5]
B = 10
Input 2:

A = [5, 17, 100, 11]
B = 130


Example Output
Output 1:

 2
Output 2:

 3


Example Explanation
Explanation 1:

Constraints are satisfied for maximal value of 2.
Explanation 2:

Constraints are satisfied for maximal value of 3.


//Java


public class Solution {
    public int solve(int[] A, int B) {
        int low = 1, high = A.length,ans = 0;

        while(low <= high){
            int mid = (low + high) / 2;
            if(subMax(A, mid, B)){
                ans = mid;
                low = mid+1;
            }else{
                high = mid - 1;
            }
        }
        return ans;
    }

    public boolean subMax(int[] A, int k, int B){
        long ans = 0, n = A.length;
        for(int i = 0; i < k; i++){
            ans += A[i];
        }
        if(ans > B)
            return false;
        for(int i = k; i < n; i++){
            ans = ans+A[i]-A[i-k];
            if(ans > B)
                return false;
        }

        return true;
    }
}
